library(MASS)
options(digits=3)
set.seed(1234)
mean<-c(230.7,146.7,3.6)
sigma<-matrix(c(15360.8,6721.2,-47.1,6721.2,4700.9,-16.5,-47.1,
-16.5,0.3),nrow=3,ncol=3)
mydata<-mvrnorm(500,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
dim(mydata)
head(mydata,n=10)
name<-"bob"
cut("hello",name,"\b.\n","isn't R","\t","great?\n") 
a<-5
sqrt(a)
b<-c(1.243,5.654,2.99)
round(b)
c<-matrix(runif(12),nrow=3)
log(c)
mean(c)
mydata<-matrix(rnorm(30),nrow=6)
apply(mydata,1,mean)
apply(mydata,2,mean)
apply(mydata,2,mean,trim=0.2)
options(digits=2)
student<-c("Jon Davi","Ang Will","Bull Moo","Dav Jon","Jan Mar","Che Cush",
"Reu Ytz","Gre Kno","Joe Eng","Mary Ray")
math<-c(502,600,412,358,495,512,410,625,573,522)
science<-c(95,99,80,82,75,85,80,95,89,86)
english<-c(25,22,18,15,20,28,15,30,27,18)
roster<-data.frame(student,math,science,english,stringsAsFactors=FALSE)
z<-scale(roster[,2:4])
score<-apply(z,1,mean)
roster<-cbind(roster,score)
y<-quantile(roster$score,c(.8,.6,.4,.2))
roster$grade[score>=y[1]]<-"A"
roster$grade[score<y[1]&score>=y[2]]<-"B"
roster$grade[score<y[2]&score>=y[3]]<-"C"
roster$grade[score<y[3]&score>=y[4]]<-"D"
roster$grade[score<y[4]]<-"F"
name<-strsplit((roster$student)," ")
firstname<-sapply(name,"[",1)
lastname<-sapply(name,"[",2)
roster<-cbind(firstname,lastname,roster[,-1])
roster[order(lastname,firstname),]
for(i in 1:10) print("hello")
i<-10
while(i>0){print("hello");i<-i-1}
if(is.character(grade))grade<-as.facter(grade)
if(!is.character(grade))grade<-as.facter(grade) else print("Grade already is a facter")
ifelse(score>0.5,print("passed"),print("failed"))
outcome<-ifelse(score>0.5,"passed","failed")
feelings<-c("sad","afraid")
for(i in feelings)
print(switch(i,happy="i am glad you are happy",afraid="there is nothing to fear",
sad="cheer up",angry="calm down now"))
mystats<-function(x,parametric=TRUE,print=FALSE)
{if(parametric) {center<-mean(x);spread<-sd(x)} 
else {center<-median(x);spread<-mad(x)}
if(print&parametric){cat("mean=",center,"\n","mad=",spread,"\n")}
else if (print & !parametric){cat("median=",center,"\n","mad",spread,"\n")}
result<-list(center=center,spread=spread)
return(result)}
set.seed(1234)
x<-rnorm(500)
y<-mystats(x)
y<-mystats(x,parametric=FALSE,print=TRUE)
mydata<-function(type="long"){
switch(type,
long=format(Sys.time(),"%A %B %D %Y"),
short=format(Sys.time(),"%m-%d-%y"),
cat(type,"is not a recognized type\n"))}
mydata("long")
mydata("short")
mydata()
mydata("medium")
cars<-mtcars[1:5,1:4]
cars
t(cars)
options(digits=3)
attach(mtcars)
aggdata<-aggregate(mtcars,by=list(cyl,gear),FUN=mean,na.rm=TRUE)
aggdata
install.packages("reshape2")
library(reshape2)
md<-melt(mydata,id=c("ID","Time"))
